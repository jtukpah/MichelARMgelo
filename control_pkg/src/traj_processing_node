# This node will read a CSV file containing a trajectory, and will publish it one point at a time.

import rospy
from geometry_msgs.msg import Vector3


def send_trajectory(traj_file):
    """
    Read a file, with rows in format x,y,z.
    Publish each point in the trajectory,
    @param traj_file. file object.
    """
    lines = traj_file.readlines()
    for i in range(1, len(lines)):
        vals = [float(v) for v in lines[i].split(",")]
        msg = Vector3(x=vals[0], y=vals[1], z=vals[2])
        traj_pt_pub.publish(msg)
        # TODO may need to add a small sleep here.

def main():
    global traj_pt_pub
    rospy.init_node('traj_processing_node')

    # define publisher.
    traj_pt_pub = rospy.Publisher('/traj/point', Vector3)
    # TODO subscribe to Float32MultiArray of points from a different node that has generated it directly.

    # find a file to read a trajectory from (for now).
    traj_file = open("trajectories/traj1.csv", "r")
    send_trajectory(traj_file)

    # # pump callbacks.
    # rospy.spin()

if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass